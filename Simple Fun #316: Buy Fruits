#Price labels have not been placed at the fruits stall, but the price labels can be seen and the grocery list contains the fruits needed for today.
#Given the a list of price(priceLabels) and a list of fruits (fruitsList), the task is to calculate the minimum and maximum amount of money. Return a two-elements array [minimum , maximum].

import collections

def buy_fruits(price_labels, fruits_list):
    fruits = collections.Counter(fruits_list)
    sorted_fruit = sorted(fruits.keys(), key=lambda item: -fruits[item])
    low_price = sorted(price_labels)[:len(sorted_fruit)]
    high_price = sorted(price_labels, reverse= True)[:len(sorted_fruit)]
    low_price_mapping = dict(zip(sorted_fruit, low_price))
    high_price_mapping = dict(zip(sorted_fruit, high_price))
    return sum(low_price_mapping[fruit] for fruit in fruits_list), sum(high_price_mapping[fruit] for fruit in fruits_list)
